{"version":3,"sources":["components/App/initialState.js","helpers/index.js","components/Title/index.jsx","components/Display/index.jsx","helpers/labels.js","components/Button/index.jsx","components/Buttons/index.jsx","components/Container/index.jsx","components/App/index.jsx","index.js"],"names":["initialState","displayValue","clearDisplay","operator","values","isDisplayResult","current","operations","/","a","b","*","-","+","formatNumber","value","Intl","NumberFormat","format","parseFloat","Title","_ref","text","react_default","createElement","className","defaultProps","memo","labels","name","class","type","label","concat","onClick","event","preventDefault","document","dispatchEvent","CustomEvent","detail","map","components_Button","key","react","components_Display","components_Buttons","App","state","calc","_this","handleClick","_ref$detail","clearMemory","setOperation","showResult","calcPercentage","addDigit","addEventListener","this","setState","Object","objectSpread","op","_this$state","n","_this$state2","includes","_this$state3","length","result","toConsumableArray","reduce","_this$state4","_this$state4$values","slicedToArray","amount","perc","components_Title","components_Container","Component","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.e20d65ea.chunk.js","sourcesContent":["export default {\n  displayValue: '0',\n  clearDisplay: false,\n  operator: null,\n  values: [],\n  isDisplayResult: false,\n  current: 0,\n}\n","export const operations = {\n  '/': (a, b) => a / b,\n  '*': (a, b) => a * b,\n  '-': (a, b) => a - b,\n  '+': (a, b) => a + b,\n}\n\nexport const parseNumber = value => value.replace(/[^\\d]+/g, '')\nexport const formatNumber = value => (\n  new Intl.NumberFormat('en-US').format(parseFloat(value))\n)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.css'\n\nconst Title = ({ text }) => (\n  <h1 className=\"title\">\n    {text}\n  </h1>\n)\n\nTitle.defaultProps = {\n  text: 'Calculator',\n}\n\nTitle.propTypes = {\n  text: PropTypes.string,\n}\n\nexport default memo(Title)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.css'\n\nconst Display = ({ value }) => (\n  <div className=\"display\">\n    {value}\n  </div>\n)\n\nDisplay.propTypes = {\n  value: PropTypes.string.isRequired,\n}\n\nexport default memo(Display)\n","export default [\n  { name: 'AC', class: 'double', type: 'clear' },\n  { name: '%', class: '', type: 'perc' },\n  { name: '/', class: 'operator', type: 'operation' },\n  { name: '7', class: '', type: '' },\n  { name: '8', class: '', type: '' },\n  { name: '9', class: '', type: '' },\n  { name: '*', class: 'operator', type: 'operation' },\n  { name: '4', class: '', type: '' },\n  { name: '5', class: '', type: '' },\n  { name: '6', class: '', type: '' },\n  { name: '-', class: 'operator', type: 'operation' },\n  { name: '1', class: '', type: '' },\n  { name: '2', class: '', type: '' },\n  { name: '3', class: '', type: '' },\n  { name: '+', class: 'operator', type: 'operation' },\n  { name: '0', class: 'double', type: '' },\n  { name: '.', class: '', type: '' },\n  { name: '=', class: 'operator', type: 'result' },\n]\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.css'\n\nconst Button = ({ label }) => (\n  <button\n    className={`btn ${label.class}`}\n    onClick={(event) => {\n      event.preventDefault()\n      document.dispatchEvent(\n        new CustomEvent('btnclick', { detail: label })\n      )\n    }}\n  >\n    {label.name}\n  </button>\n)\n\nButton.propTypes = {\n  label: PropTypes.shape({\n    class: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default memo(Button)\n","import React, { memo } from 'react'\n\nimport labels from '../../helpers/labels'\nimport Button from '../Button'\n\nconst Buttons = () => (\n  labels.map(label => (\n    <Button\n      key={label.name}\n      label={label}\n    />\n  ))\n)\n\nexport default memo(Buttons)\n","import React, { Fragment, memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { formatNumber } from '../../helpers'\nimport Display from '../Display'\nimport Buttons from '../Buttons'\n\nconst Container = ({ value }) => (\n  <Fragment>\n    <Display value={formatNumber(value)} />\n    <Buttons />\n  </Fragment>\n)\n\nContainer.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n}\n\nexport default memo(Container)\n","import React, { Component } from 'react'\n\nimport './style.css'\n\nimport initialState from './initialState'\nimport { operations } from '../../helpers'\nimport Title from '../Title'\nimport Container from '../Container'\n\nclass App extends Component {\n  state = { ...initialState }\n\n  componentDidMount() {\n    document.addEventListener('btnclick', this.handleClick)\n  }\n\n  clearMemory() {\n    this.setState({ ...initialState })\n  }\n\n  calc = (a, b) => {\n    const { operator } = this.state\n\n    return operations[operator](a, b)\n  }\n\n  setOperation(op) {\n    let {\n      current,\n      operator,\n      isDisplayResult,\n      displayValue,\n    } = this.state\n\n    if (operator && op !== operator) {\n      this.setState({ operator: op })\n      this.showResult()\n      return\n    }\n\n    if (isDisplayResult) {\n      const value = parseFloat(displayValue)\n      current = 0\n\n      this.setState({ values: [value] })\n    }\n\n    current++\n\n    this.setState({\n      current,\n      operator: op,\n      clearDisplay: true,\n      isDisplayResult: false,\n    })\n  }\n\n  addDigit(n) {\n    const {\n      current,\n      displayValue,\n      clearDisplay,\n      values,\n    } = this.state\n\n    if (n === '.' && displayValue.includes('.')) {\n      return\n    }\n\n    const clear = displayValue === '0' || clearDisplay\n    const value = `${clear ? '' : displayValue}${n}`\n\n    if (n !== '.') {\n      values[current] = parseFloat(value)\n      this.setState({ values })\n    }\n\n    this.setState({\n      displayValue: value,\n      clearDisplay: false,\n    })\n  }\n\n  showResult() {\n    const { operator, values } = this.state\n\n    if (!operator || values.length < 2) {\n      return\n    }\n\n    const result = [...values].reduce(this.calc)\n\n    this.setState({\n      displayValue: result,\n      values: [result],\n      clearDisplay: true,\n      isDisplayResult: true,\n    })\n  }\n\n  calcPercentage() {\n    const { operator, values: [amount, perc] } = this.state\n\n    if (!operator) {\n      return\n    }\n\n    this.setState({\n      displayValue: this.calc(amount, (amount / 100) * perc),\n    })\n  }\n\n  handleClick = ({ detail: { type, name } }) => {\n    switch (type) {\n      case 'clear':\n        this.clearMemory()\n        break\n\n      case 'operation':\n        this.setOperation(name)\n        break\n\n      case 'result':\n        this.showResult()\n        break\n\n      case 'perc':\n        this.calcPercentage()\n        break\n\n      default:\n        this.addDigit(name)\n    }\n  }\n\n  render() {\n    const { displayValue } = this.state\n\n    return (\n      <div className=\"calculator\">\n        <Title />\n        <Container value={displayValue} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport './assets/css/style.css'\n\nimport App from './components/App'\n\nrender(<App />, document.getElementById('root'))\n"],"sourceRoot":""}