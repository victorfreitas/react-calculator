{"version":3,"sources":["components/App/initialState.js","helpers/index.js","components/Title/index.jsx","components/Display/index.jsx","helpers/labels.js","components/Button/index.jsx","components/Buttons/index.jsx","components/Container/index.jsx","components/App/index.jsx","index.js"],"names":["initialState","displayValue","clearDisplay","operator","values","isDisplayResult","current","hat","operations","/","a","b","*","-","+","formatNumber","value","Intl","NumberFormat","format","parseFloat","Title","_ref","text","react_default","createElement","className","defaultProps","memo","react","labels","name","class","type","label","concat","onClick","event","preventDefault","document","dispatchEvent","CustomEvent","detail","map","components_Button","key","Container","components_Display","components_Buttons","App","state","calc","_this","handleClick","_ref$detail","clearMemory","setOperation","showResult","calcPercentage","addDigit","addEventListener","this","setState","Object","objectSpread","op","_this$state","n","_this$state2","includes","cloneValues","toConsumableArray","filter","v","isNaN","_this$state3","length","result","reduce","join","_this$state4","_this$state4$values","slicedToArray","amount","perc","_this$state5","components_Title","components_Container","Component","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.9f87ba6a.chunk.js","sourcesContent":["export default {\n  displayValue: '0',\n  clearDisplay: false,\n  operator: null,\n  values: [],\n  isDisplayResult: false,\n  current: 0,\n  hat: '',\n}\n","export const operations = {\n  '/': (a, b) => a / b,\n  '*': (a, b) => a * b,\n  '-': (a, b) => a - b,\n  '+': (a, b) => a + b,\n}\n\nexport const parseNumber = value => value.replace(/[^\\d]+/g, '')\nexport const formatNumber = value => (\n  new Intl.NumberFormat('en-US').format(parseFloat(value))\n)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.css'\n\nconst Title = ({ text }) => (\n  <h1 className=\"title\">\n    {text}\n  </h1>\n)\n\nTitle.defaultProps = {\n  text: 'Calculator',\n}\n\nTitle.propTypes = {\n  text: PropTypes.string,\n}\n\nexport default memo(Title)\n","import React, { Fragment, memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.css'\n\nconst Display = ({ hat, value }) => (\n  <Fragment>\n    <span className=\"display-calc\">\n      {hat}\n    </span>\n    <div className=\"display\">\n      {value}\n    </div>\n  </Fragment>\n)\n\nDisplay.propTypes = {\n  hat: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n}\n\nexport default memo(Display)\n","export default [\n  { name: 'AC', class: 'double', type: 'clear' },\n  { name: '%', class: '', type: 'perc' },\n  { name: '/', class: 'operator', type: 'operation' },\n  { name: '7', class: '', type: '' },\n  { name: '8', class: '', type: '' },\n  { name: '9', class: '', type: '' },\n  { name: '*', class: 'operator', type: 'operation' },\n  { name: '4', class: '', type: '' },\n  { name: '5', class: '', type: '' },\n  { name: '6', class: '', type: '' },\n  { name: '-', class: 'operator', type: 'operation' },\n  { name: '1', class: '', type: '' },\n  { name: '2', class: '', type: '' },\n  { name: '3', class: '', type: '' },\n  { name: '+', class: 'operator', type: 'operation' },\n  { name: '0', class: 'double', type: '' },\n  { name: '.', class: '', type: '' },\n  { name: '=', class: 'operator', type: 'result' },\n]\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './style.css'\n\nconst Button = ({ label }) => (\n  <button\n    className={`btn ${label.class}`}\n    onClick={(event) => {\n      event.preventDefault()\n      document.dispatchEvent(\n        new CustomEvent('btnclick', { detail: label })\n      )\n    }}\n  >\n    {label.name}\n  </button>\n)\n\nButton.propTypes = {\n  label: PropTypes.shape({\n    class: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default memo(Button)\n","import React, { memo } from 'react'\n\nimport labels from '../../helpers/labels'\nimport Button from '../Button'\n\nconst Buttons = () => (\n  labels.map(label => (\n    <Button\n      key={label.name}\n      label={label}\n    />\n  ))\n)\n\nexport default memo(Buttons)\n","import React, { Fragment, memo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { formatNumber } from '../../helpers'\nimport Display from '../Display'\nimport Buttons from '../Buttons'\n\nconst Container = ({ hat, value }) => (\n  <Fragment>\n    <Display\n      value={formatNumber(value)}\n      hat={hat}\n    />\n    <Buttons />\n  </Fragment>\n)\n\nContainer.defaultProps = {\n  hat: '',\n}\n\nContainer.propTypes = {\n  hat: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n}\n\nexport default memo(Container)\n","import React, { Component } from 'react'\n\nimport './style.css'\n\nimport initialState from './initialState'\nimport { operations } from '../../helpers'\nimport Title from '../Title'\nimport Container from '../Container'\n\nclass App extends Component {\n  state = { ...initialState }\n\n  componentDidMount() {\n    document.addEventListener('btnclick', this.handleClick)\n  }\n\n  clearMemory() {\n    this.setState({ ...initialState })\n  }\n\n  calc = (a, b) => {\n    const { operator } = this.state\n\n    return operations[operator](a, b)\n  }\n\n  setOperation(op) {\n    let {\n      current,\n      operator,\n      isDisplayResult,\n      displayValue,\n    } = this.state\n\n    if (operator && op !== operator) {\n      this.setState({ operator: op })\n      this.showResult(op)\n      return\n    }\n\n    if (isDisplayResult) {\n      const value = parseFloat(displayValue)\n      current = 0\n\n      this.setState({ values: [value] })\n    }\n\n    current++\n\n    this.setState({\n      current,\n      operator: op,\n      clearDisplay: true,\n      isDisplayResult: false,\n    })\n  }\n\n  addDigit(n) {\n    const {\n      current,\n      displayValue,\n      clearDisplay,\n      values,\n    } = this.state\n\n    if (n === '.' && displayValue.includes('.')) {\n      return\n    }\n\n    const clear = displayValue === '0' || clearDisplay\n    const value = `${clear ? '' : displayValue}${n}`\n\n    if (n !== '.') {\n      const cloneValues = [...values]\n      cloneValues[current] = parseFloat(value)\n\n      this.setState({ values: cloneValues.filter(v => !isNaN(v)) })\n    }\n\n    this.setState({\n      displayValue: value,\n      clearDisplay: false,\n    })\n  }\n\n  showResult(op) {\n    const { operator, values } = this.state\n\n    if (!operator || values.length < 2) {\n      return\n    }\n\n    const result = [...values].reduce(this.calc)\n\n    this.setState({\n      current: 1,\n      displayValue: result,\n      values: [result],\n      clearDisplay: true,\n      isDisplayResult: true,\n      hat: `${values.join(` ${op || operator} `)} =`,\n    })\n  }\n\n  calcPercentage() {\n    const { operator, values: [amount, perc] } = this.state\n\n    if (!operator) {\n      return\n    }\n\n    this.setState({\n      hat: `${amount} ${operator} ${perc}% =`,\n      displayValue: this.calc(amount, (amount / 100) * perc),\n    })\n  }\n\n  handleClick = ({ detail: { type, name } }) => {\n    switch (type) {\n      case 'clear':\n        this.clearMemory()\n        break\n\n      case 'operation':\n        this.setOperation(name)\n        break\n\n      case 'result':\n        this.showResult()\n        break\n\n      case 'perc':\n        this.calcPercentage()\n        break\n\n      default:\n        this.addDigit(name)\n    }\n  }\n\n  render() {\n    const { displayValue, hat } = this.state\n\n    return (\n      <div className=\"calculator\">\n        <Title />\n        <Container\n          hat={hat}\n          value={displayValue}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport './assets/css/style.css'\n\nimport App from './components/App'\n\nrender(<App />, document.getElementById('root'))\n"],"sourceRoot":""}